{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to My MkDocs Project","text":"<p>This is an example MkDocs project using the Material theme.</p>"},{"location":"#get-started","title":"Get Started","text":"<ol> <li>Edit the <code>index.md</code> file to update the homepage content.</li> <li>Add more pages in the <code>docs/</code> directory.</li> <li>Customize your site using the <code>mkdocs.yml</code> file.</li> </ol> <p>Check out the About page to learn more.</p>"},{"location":"about/","title":"About This Project","text":"<p>This is an example project created with MkDocs and the Material theme. You can add as many pages as you need, and they will automatically be added to the navigation.</p>"},{"location":"about/#key-features","title":"Key Features","text":"<ul> <li>Write documentation in Markdown.</li> <li>Use the Material Design theme for a professional look.</li> <li>Host on GitHub Pages easily.</li> </ul>"},{"location":"multipass/","title":"Overview of how to use multipass via a docker for beginner","text":""},{"location":"multipass/#multipass","title":"multipass","text":"<p>A multipass is a tool that help us run a virtual machine. Virtual machine is digitezed version of a physical machine. Virtual machine help us run programs, operating system, store data and connect to the network.</p>"},{"location":"multipass/#how-to-launch-or-run-a-multipass","title":"how to launch or run a multipass","text":"<p>To run a multipass you need an ubuntu_instance. The ubuntu_instance we ued was docker. A docker is a tool that help us create and manage container. Container is an isolated user-space that help you run a programs. When you use a container to run a program it some how load all the packages and dependencies related to that program without you noticing. We use the following command to lauch the multipass: - &lt; multipass launch docker --name instance_name &gt; to launch ubuntu_instance in multipass  - We can use the command &lt; multipass --help &gt; to know all the command available on multipass - To enter the shell ( we some how created a new shell in our multipass so that if our code had to crash then it will neither affect out host machine or host shell). Type to enter the shell &lt; multipass shell instance_name &gt;. So with this command your new default shell in the multipass, will be instance-name which is just a name given to an instance, the instance here in our case is docker. The docker is an ubuntu instance with docker pre-install in the ubuntu.</p> <p>we can also access our multipass or run a code on the host machine, this is done as follow: - Go to the host shell  - enter inside the host scriting shell, use the command &lt; nano .zshrc &gt; if of cost you are using the zshell default shell or the command &lt; nano .bashrc &gt; if otherwise. - Type &lt; allias any_name= multipass exec instance_name --docker &gt; in you scripting shell - Save it by pressing ctrl + o and enter, ctrl + x to exit. - execute your file using the command  &lt; source .bashrc or .zshrc &gt; - On your host shell, type &lt; any_name command &gt;, this is what you want to execute on the multipass. So it will execute on the virtual machine managed by the multipass.</p> <p>With docker in multipass we can run any kind of code without fear because even if it had to face a crash, it will only affect the virtual machine managed by the multipass and the host machine itself. </p> <p>you may better understand how the process work with the following diagram [https://app.diagrams.net/#G1C_Z3mA3-9kYLqGYoBO2D72TnDMMAykki#%7B%22pageId%22%3A%22vN5Kuzst5b3ZgsCIS6pS%22%7D]</p>"}]}